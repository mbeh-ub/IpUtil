String a= new String("110");
System.out.println(a);


System.out.println(Integer.toBinaryString(1 << 4));

System.out.println((-16 >>> 1));
System.out.println(Integer.toBinaryString(-16 >> 1));
System.out.println(Integer.toBinaryString(-16 >>> 1));

The method parseInt(String, int) is undefined for the type ByteSystem.out.println(Byte.parseByte("-1111111",2));
		
System.out.println(Byte.valueOf("1111110",2));
System.out.println((new Byte("15")));

System.out.println(Integer.toBinaryString(-1));

System.out.println(Integer.toBinaryString(Integer.parseInt("FFFF",16)));
		
Syntax error, insert ")" to complete ExpressionSystem.out.println(Long.toBinaryString(Long.MAX_VALUE));

System.out.println(Integer.toBinaryString(132));
System.out.println(Integer.valueOf("10000100000",2));
System.out.println(Long.toBinaryString(42541956123769884636017138956568135816));

2001:4860:4860:0000:0000:0000:0000:8888
42541956123769884636017138956568135816



00100000000000010100100001100000 01001000011000000000000000000000
2306204062558715904
00000000000000000000000000000000 00000000000000001000100010001000
34952

long highBits = 2306204062558715904l;
long lowBits  = 34952l;
int N_SHORTS = 8;
int i = 3;

short result = (short) (((highBits << i * 16) >>> 16 * (N_SHORTS - 1)) & 0xFFFF);
System.out.println(String.format("%x", result));





long highBits = 2306204062558715904l;
long lowBits  = 34952l;
int N_SHORTS = 8;
int i = 6;

short result = (short) (((lowBits << i * 16) >>> 16 * (N_SHORTS - 1)) & 0xFFFF);
System.out.println(String.format("%x", result));

long highBits = 2306204062558715904l;
long lowBits  = 34952l;
int N_SHORTS = 8;
int i = 1;

long result = (highBits << i * 16);
System.out.println( Long.toBinaryString(result) );
System.out.println(String.format("%x", result));

long result1 = result >>> 16 * (N_SHORTS - 1);
System.out.println( Long.toBinaryString(result1) );
System.out.println(String.format("%x", result1));



long highBits = 2306204062558715904l;
long lowBits  = 34952l;
int N_SHORTS = 8;
int i = 4;

long result = (lowBits << i * 16);
System.out.println( Long.toBinaryString(result) );
System.out.println(String.format("%x", result));

long result1 = result >>> 16 * (N_SHORTS - 1);
System.out.println( Long.toBinaryString(result1) );
System.out.println(String.format("%x", result1));




Integer b1 = 132;
Integer b2 = 230;
Integer b3 = 25;
Integer b4 = 150;
Double a = b1 * Math.pow(256,3) + b2 * Math.pow(256,2)+ b3* Math.pow(256,1)+ b4* Math.pow(256,0);
System.out.println(a.longValue());

long a = (42541956123769884636017138956568135816 >>> 64);
System.out.println(a);

java.math.BigInteger bi = new java.math.BigInteger("42541956123769884636017138956568135816");
System.out.println(bi.toByteArray());


byte b =  (byte) 255;System.out.println(Byte.toUnsignedInt(b));


java.nio.ByteBuffer byteBuffer = java.nio.ByteBuffer.allocate(8).putLong(2229672192l);
System.out.println(byteBuffer.get());
An exception occurred during evaluation:  java.nio.BufferUnderflowException


final short[] shorts = new short[4];
long lowBits = 2229672192l;
for (int i = 0; i < 4; i++) {
	shorts[i] = (short) (((lowBits << i * 8) >>> 8 * (3)) & 0xFF);
	System.out.println(shorts[i]);
}

System.out.println(Long.highestOneBit(190));
System.out.println(Long.highestOneBit(256));

System.out.println(Math.floor(32.9));
System.out.println((long)32.6d);


long lowerLimit = 2229672202l ;
long upperLimit = 2229672392l;
                  

long addressCount = upperLimit - lowerLimit;

long largestPossibleCidrBlock = (long) (Math.log(addressCount)/Math.log(2));
long lowerBound = Long.highestOneBit(lowerLimit);
long upperBound = Long.highestOneBit(upperLimit);

System.out.println(largestPossibleCidrBlock);
System.out.println(lowerBound);
System.out.println(upperBound);

System.out.println(Long.toBinaryString(Long.MAX_VALUE+2));
System.out.println(Long.toBinaryString(9223372036854775807l+1));
System.out.println(Long.toBinaryString(2306204062558715904l));


System.out.println(Math.log(2147483648l)/Math.log(2));

System.out.println( Long.toBinaryString(~(-1l << 63)));

System.out.println(Long.toBinaryString((Long.parseUnsignedLong("9223372036854775807"))));
System.out.println(Long.toBinaryString((Long.parseLong("-1"))));
int cidr=63;cidr cannot be resolved to a variablecidr cannot be resolved to a variableSystem.out.println( Long.toBinaryString((-1l << cidr)));
System.out.println( Long.toBinaryString((~(-1l << cidr))));
System.out.println("---------------------------------------------------------------------------");

System.out.println( Long.toBinaryString( (~(-1l << 0 ))   ));


cidrSuffix cannot be resolved to a variableSystem.out.println( Long.toBinaryString( (-1l << 64)   ));



System.out.println( Long.toBinaryString(2229672392l));

Long upper= 2229672392l;
long lower = 2229672202l;
long n=2l;
long highBlockUpper = (upper | (~(-1 << n)));
long highBlockLower = (highBlockUpper & (-1 << n-1));

long lowBlockLower = (upper & (-1 << n));
long lowBlockUpper = (lowBlockLower | (~(-1 << n-1)));

System.out.println( Long.toBinaryString(upper));
//System.out.println( Long.toBinaryString(lower));

System.out.println( Long.toBinaryString(highBlockUpper));
System.out.println( Long.toBinaryString(highBlockLower));

System.out.println( Long.toBinaryString(lowBlockUpper));
System.out.println( Long.toBinaryString(lowBlockLower));
System.out.println("--------------------------------");
